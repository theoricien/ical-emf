/*
 * generated by Xtext 2.22.0
 */
package xCalendar.serializer;

import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;
import xCalendar.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MyDslGrammarAccess grammarAccess;
	protected AbstractElementAlias match_DateT_ColonKeyword_4_2_1_or_HKeyword_4_2_0_or_HeureKeyword_4_2_2;
	protected AbstractElementAlias match_DateT_EtKeyword_4_4_0_q;
	protected AbstractElementAlias match_DateT___AKeyword_4_0_1_or_LatinSmallLetterAWithGraveSpaceKeyword_4_0_0__q;
	protected AbstractElementAlias match_DateT___ColonKeyword_4_3_1_4_or_MKeyword_4_3_1_0_or_MinKeyword_4_3_1_2_or_MinutesKeyword_4_3_1_3_or_MnKeyword_4_3_1_1__q;
	protected AbstractElementAlias match_DateT___SKeyword_4_4_2_0_or_SecKeyword_4_4_2_1_or_SecondesKeyword_4_4_2_2__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MyDslGrammarAccess) access;
		match_DateT_ColonKeyword_4_2_1_or_HKeyword_4_2_0_or_HeureKeyword_4_2_2 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getDateTAccess().getColonKeyword_4_2_1()), new TokenAlias(false, false, grammarAccess.getDateTAccess().getHKeyword_4_2_0()), new TokenAlias(false, false, grammarAccess.getDateTAccess().getHeureKeyword_4_2_2()));
		match_DateT_EtKeyword_4_4_0_q = new TokenAlias(false, true, grammarAccess.getDateTAccess().getEtKeyword_4_4_0());
		match_DateT___AKeyword_4_0_1_or_LatinSmallLetterAWithGraveSpaceKeyword_4_0_0__q = new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getDateTAccess().getAKeyword_4_0_1()), new TokenAlias(false, false, grammarAccess.getDateTAccess().getLatinSmallLetterAWithGraveSpaceKeyword_4_0_0()));
		match_DateT___ColonKeyword_4_3_1_4_or_MKeyword_4_3_1_0_or_MinKeyword_4_3_1_2_or_MinutesKeyword_4_3_1_3_or_MnKeyword_4_3_1_1__q = new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getDateTAccess().getColonKeyword_4_3_1_4()), new TokenAlias(false, false, grammarAccess.getDateTAccess().getMKeyword_4_3_1_0()), new TokenAlias(false, false, grammarAccess.getDateTAccess().getMinKeyword_4_3_1_2()), new TokenAlias(false, false, grammarAccess.getDateTAccess().getMinutesKeyword_4_3_1_3()), new TokenAlias(false, false, grammarAccess.getDateTAccess().getMnKeyword_4_3_1_1()));
		match_DateT___SKeyword_4_4_2_0_or_SecKeyword_4_4_2_1_or_SecondesKeyword_4_4_2_2__q = new AlternativeAlias(false, true, new TokenAlias(false, false, grammarAccess.getDateTAccess().getSKeyword_4_4_2_0()), new TokenAlias(false, false, grammarAccess.getDateTAccess().getSecKeyword_4_4_2_1()), new TokenAlias(false, false, grammarAccess.getDateTAccess().getSecondesKeyword_4_4_2_2()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_DateT_ColonKeyword_4_2_1_or_HKeyword_4_2_0_or_HeureKeyword_4_2_2.equals(syntax))
				emit_DateT_ColonKeyword_4_2_1_or_HKeyword_4_2_0_or_HeureKeyword_4_2_2(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateT_EtKeyword_4_4_0_q.equals(syntax))
				emit_DateT_EtKeyword_4_4_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateT___AKeyword_4_0_1_or_LatinSmallLetterAWithGraveSpaceKeyword_4_0_0__q.equals(syntax))
				emit_DateT___AKeyword_4_0_1_or_LatinSmallLetterAWithGraveSpaceKeyword_4_0_0__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateT___ColonKeyword_4_3_1_4_or_MKeyword_4_3_1_0_or_MinKeyword_4_3_1_2_or_MinutesKeyword_4_3_1_3_or_MnKeyword_4_3_1_1__q.equals(syntax))
				emit_DateT___ColonKeyword_4_3_1_4_or_MKeyword_4_3_1_0_or_MinKeyword_4_3_1_2_or_MinutesKeyword_4_3_1_3_or_MnKeyword_4_3_1_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_DateT___SKeyword_4_4_2_0_or_SecKeyword_4_4_2_1_or_SecondesKeyword_4_4_2_2__q.equals(syntax))
				emit_DateT___SKeyword_4_4_2_0_or_SecKeyword_4_4_2_1_or_SecondesKeyword_4_4_2_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'h' | ':' | 'heure '
	 *
	 * This ambiguous syntax occurs at:
	 *     hours=Integer (ambiguity) ' et '? seconds=Integer
	 *     hours=Integer (ambiguity) (rule end)
	 *     hours=Integer (ambiguity) minutes=Integer
	 */
	protected void emit_DateT_ColonKeyword_4_2_1_or_HKeyword_4_2_0_or_HeureKeyword_4_2_2(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ' et '?
	 *
	 * This ambiguous syntax occurs at:
	 *     hours=Integer ('h' | ':' | 'heure ') (ambiguity) seconds=Integer
	 *     minutes=Integer ('m' | 'mn' | 'min' | 'minutes' | ':')? (ambiguity) seconds=Integer
	 */
	protected void emit_DateT_EtKeyword_4_4_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('à ' | 'a ')?
	 *
	 * This ambiguous syntax occurs at:
	 *     month=Month (ambiguity) hours=Integer
	 *     year=Integer (ambiguity) hours=Integer
	 */
	protected void emit_DateT___AKeyword_4_0_1_or_LatinSmallLetterAWithGraveSpaceKeyword_4_0_0__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('m' | 'mn' | 'min' | 'minutes' | ':')?
	 *
	 * This ambiguous syntax occurs at:
	 *     minutes=Integer (ambiguity) ' et '? seconds=Integer
	 *     minutes=Integer (ambiguity) (rule end)
	 */
	protected void emit_DateT___ColonKeyword_4_3_1_4_or_MKeyword_4_3_1_0_or_MinKeyword_4_3_1_2_or_MinutesKeyword_4_3_1_3_or_MnKeyword_4_3_1_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('s' | 'sec' | 'secondes')?
	 *
	 * This ambiguous syntax occurs at:
	 *     seconds=Integer (ambiguity) (rule end)
	 */
	protected void emit_DateT___SKeyword_4_4_2_0_or_SecKeyword_4_4_2_1_or_SecondesKeyword_4_4_2_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
